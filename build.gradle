buildscript {
	ext {
		kotlinVersion = '1.2.20'
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

subprojects {
	apply plugin: 'kotlin'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.example.warehouse'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 1.8
	compileKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}
	compileTestKotlin {
		kotlinOptions {
			freeCompilerArgs = ["-Xjsr305=strict"]
			jvmTarget = "1.8"
		}
	}

	test {
		useJUnitPlatform()
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compile(
				'com.fasterxml.jackson.module:jackson-module-kotlin',
				"org.jetbrains.kotlin:kotlin-stdlib-jdk8",
				'org.jetbrains.kotlin:kotlin-reflect',
		)
		runtime('org.postgresql:postgresql')
		testCompile(
				"com.google.code.gson:gson:2.8.0",
				"org.mockito:mockito-junit-jupiter:2.18.0"
		)
		testCompile('org.springframework.boot:spring-boot-starter-test') {
			exclude module: 'junit'
		}
		testImplementation('org.junit.jupiter:junit-jupiter-api')
		testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
	}

	sourceSets {
		main.kotlin.srcDir "src/main/kotlin"
		test.kotlin.srcDir "src/test/kotlin"

		test.resources.srcDir "src/test/resources"
	}
}